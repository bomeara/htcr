% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fly.R
\name{fly}
\alias{fly}
\title{Start a run on HTCondor}
\usage{
fly(conditions, rscript, input_files = NULL, sleep_time = 1,
  log = "log.$(Process)", output = "out.$(Process)",
  error = "error.$(Process)", universe = "vanilla", requirements = NULL,
  other = NULL, submit_file_name = "Rjob.submit",
  executable_file_name = "run.sh")
}
\arguments{
\item{conditions}{Grid of conditions to use for run}

\item{rscript}{The R file to run}

\item{input_files}{Any other files needed to run}

\item{sleep_time}{How long between calls to condor_submit}

\item{log}{Log file}

\item{output}{Output file (in addition to ones the script itself creates)}

\item{error}{Error file}

\item{universe}{HTCondor universe to use}

\item{requirements}{Requirements to pass as a requirements call}

\item{other}{Other lines to add to the submit file (such as rank)}

\item{submit_file_name}{Name of the final submit file}

\item{executable_file_name}{Executable file name to make}
}
\description{
This takes a data.frame of arguments to use for your actual run, often generated by something like \code{expand.grid} so that each row represents a unique combination of conditions. It expects the \code{rscript} to be an R file that takes unnamed input arguments, with the first argument being the job number.
}
\examples{
\dontrun{
# Let us imagine we want to do a grid search for the maximum likelihood estimates for the mean and sd for a normal distribution for a set of points.

# First you have the points. Let us make them into a file called my_data.rda

data_points <- rnorm(1000, mean=3.1, sd=.42)
save(data_points, file="my_data.rda")

# The following code you would put in a file, let's call it batch.R. This will get the likelihood for a normal distribution for a set of points.

args <- commandArgs(TRUE)
rep_number <- args[1]
set.seed(as.integer(runif(1, 1, 1000) + as.numeric(rep_number))) #to make sure we don't have jobs use the same exact seed if they fire at the same time
x_mean <- as.numeric(args[2])
x_sd <- as.numeric(args[3])
load("my_data.rda") # which loads the data. We could instead do read.csv, etc.
lnl <- dnorm(data_points, mean=x_mean, sd=x_sd, log=TRUE)
save(rep_number, x_mean, x_sd, lnl, file=paste0("Results_Rep",rep_number,"_Mean_",signif(x_mean,2), "_SD_", signif(x_sd, 2), ".rda"))

# Then let's try making a set of points to try

mean_attempts <- seq(from=-5, to=5, by=1)
sd_attempts <- seq(from=0, to=1, by=0.1)
conditions <- expand.grid(rep=sequence(3), means=mean_attempts, sds=sd_attempts)

Note that we have rep in expand.grid so that each combination is done three times.

# Now we can use this function send off the jobs to condor

fly(conditions, rscript="batch.R", input_files="my_data.rda")
}

}
\seealso{
packages in the High Performance Task View for R.
}
